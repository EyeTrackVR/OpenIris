; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = debug ; do not change this value

; The below options are available for all environments
; The ssid and password are requried for the trackers to connect to your network!!!
[wifi]
ssid="your_ssid_goes_here" ; your wifi network name goes here
password="your_password_goes_here" ; Place your Wifi password here
OTAPassword="" ; if empty, no password will be required
OTAServerPort=3232

; DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING
[pinouts]
; AI Tinker camera, the ov2650
PWDN_GPIO_NUM  = 32
RESET_GPIO_NUM = -1
XCLK_GPIO_NUM  =  0
SIOD_GPIO_NUM  = 26
SIOC_GPIO_NUM  = 27
Y9_GPIO_NUM    = 35
Y8_GPIO_NUM    = 34
Y7_GPIO_NUM    = 39
Y6_GPIO_NUM    = 36
Y5_GPIO_NUM    = 21
Y4_GPIO_NUM    = 19
Y3_GPIO_NUM    = 18
Y2_GPIO_NUM    =  5
VSYNC_GPIO_NUM = 25
HREF_GPIO_NUM  = 23
PCLK_GPIO_NUM  = 22

[common]
platform = espressif32
board = esp32cam
framework = arduino
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
build_flags = 
	'-DMDNS_TRACKER_NAME="OpenIrisTracker"' ; Set the tracker name - The string literal tells platformio to include the quatations in the string - making sure that the compiler sees the string as a cstring

	-DOTA_SERVER_PORT=${wifi.OTAServerPort} ; Set the OTA server

	'-DOTA_PASSWORD=${wifi.OTAPassword}' ; Set the OTA password

	'-DWIFI_SSID=${wifi.ssid}' ; Set the users wifi network name

	'-DWIFI_PASSWORD=${wifi.password}' ; Set the users wifi network password

	-DDEBUG_ESP_PORT=Serial

	-DBOARD_HAS_PSRAM

	-mfix-esp32-psram-cache-issue

	;-I include
	;-include "pinout.h" ; this has been added for future movement to a proper library structure
	;-include "credentials.h" ; this has been added for future movement to a proper library structure

	; CAMERA PINOUT DEFINITIONS
	-DPWDN_GPIO_NUM=${pinouts.PWDN_GPIO_NUM} ; Set the PWDN pin
	-DRESET_GPIO_NUM=${pinouts.RESET_GPIO_NUM} ; Set the RESET pin
	-DXCLK_GPIO_NUM=${pinouts.XCLK_GPIO_NUM} ; Set the XCLK pin
	-DSIOD_GPIO_NUM=${pinouts.SIOD_GPIO_NUM} ; Set the SIOD pin
	-DSIOC_GPIO_NUM=${pinouts.SIOC_GPIO_NUM} ; Set the SIOC pin
	-DY9_GPIO_NUM=${pinouts.Y9_GPIO_NUM} ; Set the Y9 pin
	-DY8_GPIO_NUM=${pinouts.Y8_GPIO_NUM} ; Set the Y8 pin
	-DY7_GPIO_NUM=${pinouts.Y7_GPIO_NUM} ; Set the Y7 pin
	-DY6_GPIO_NUM=${pinouts.Y6_GPIO_NUM} ; Set the Y6 pin
	-DY5_GPIO_NUM=${pinouts.Y5_GPIO_NUM} ; Set the Y5 pin
	-DY4_GPIO_NUM=${pinouts.Y4_GPIO_NUM} ; Set the Y4 pin
	-DY3_GPIO_NUM=${pinouts.Y3_GPIO_NUM} ; Set the Y3 pin
	-DY2_GPIO_NUM=${pinouts.Y2_GPIO_NUM} ; Set the Y2 pin
	-DVSYNC_GPIO_NUM=${pinouts.VSYNC_GPIO_NUM} ; Set the VSYNC pin
	-DHREF_GPIO_NUM=${pinouts.HREF_GPIO_NUM} ; Set the HREF pin
	-DPCLK_GPIO_NUM=${pinouts.PCLK_GPIO_NUM} ; Set the PCLK pin


build_unflags = -Os
board_build.partitions = min_spiffs.csv
lib_ldf_mode = deep+
upload_speed = 921600
release_version = 0.0.1 ; increase this value every release build
lib_deps = 
	me-no-dev/AsyncTCP@^1.1.1
	me-no-dev/ESP Async WebServer@^1.2.3
	esp32-camera

[env:debug]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
monitor_rts = ${common.monitor_rts}
monitor_dtr = ${common.monitor_dtr}
monitor_filters = 
	;colorize -- uncomment this to get a colorful text in your terminal
	log2file
	time
	default
	esp32_exception_decoder
build_flags = 
	${common.build_flags}
	-DCORE_DEBUG_LEVEL=4
	-DVERSION=0
build_unflags = ${common.build_unflags}
board_build.partitions = ${common.board_build.partitions}
lib_ldf_mode = ${common.lib_ldf_mode}
upload_speed = ${common.upload_speed}
lib_deps = ${common.lib_deps}


[env:release]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
monitor_rts = ${common.monitor_rts}
monitor_dtr = ${common.monitor_dtr}
build_flags = 
	${common.build_flags}
	-DCORE_DEBUG_LEVEL=1
	-DVERSION=${common.release_version}
build_unflags = ${common.build_unflags}
board_build.partitions = ${common.board_build.partitions}
lib_ldf_mode = ${common.lib_ldf_mode}
upload_speed = ${common.upload_speed}
lib_deps = ${common.lib_deps}

; Experimental OTA Environment - do not select unless you know what you are doing
[env:OTA]
platform = ${common.platform}
framework = ${common.framework}
board = ${common.board}
build_flags = 
	${common.build_flags}
	-DCORE_DEBUG_LEVEL=1
	-DDEBUG_ESP_OTA
	-DVERSION=${common.release_version}
lib_deps = 
	${common.lib_deps}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
monitor_rts = ${common.monitor_rts}
monitor_dtr = ${common.monitor_dtr}
; extra_scripts = ${common.extra_scripts}
board_build.partitions = ${common.board_build.partitions}
lib_ldf_mode = ${common.lib_ldf_mode}
upload_port = 192.168.1.38
upload_protocol = espota
upload_flags = 
	--port=3232
	--auth=12345678